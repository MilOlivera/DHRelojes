<<<<<<< HEAD
'use strict';

/**
 * Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor.
 * All sequelize errors inherit from the base JS error object.
 *
 * This means that errors can be accessed using `Sequelize.ValidationError`
 * The Base Error all Sequelize Errors inherit from.
 */
class BaseError extends Error {
  constructor(message) {
    super(message);
    this.name = 'SequelizeBaseError';
    Error.captureStackTrace(this, this.constructor);
  }
}

module.exports = BaseError;
=======
var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
__export(exports, {
  default: () => base_error_default
});
class BaseError extends Error {
  constructor(message) {
    super(message);
    this.name = "SequelizeBaseError";
  }
}
var base_error_default = BaseError;
//# sourceMappingURL=base-error.js.map
>>>>>>> e63ce884e0231dbc908a29214b51bd3cf50ef810
