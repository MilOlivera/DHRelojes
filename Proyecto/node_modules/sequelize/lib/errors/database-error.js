<<<<<<< HEAD
'use strict';

const BaseError = require('./base-error');

/**
 * A base class for all database related errors.
 */
class DatabaseError extends BaseError {
  constructor(parent) {
    super(parent.message);
    this.name = 'SequelizeDatabaseError';
    /**
     * @type {Error}
     */
    this.parent = parent;
    /**
     * @type {Error}
     */
    this.original = parent;
    /**
     * The SQL that triggered the error
     * @type {string}
     */
    this.sql = parent.sql;
    /**
     * The parameters for the sql that triggered the error
     * @type {Array<any>}
     */
    this.parameters = parent.parameters;
    Error.captureStackTrace(this, this.constructor);
  }
}

module.exports = DatabaseError;
=======
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
__export(exports, {
  default: () => database_error_default
});
var import_base_error = __toModule(require("./base-error"));
class DatabaseError extends import_base_error.default {
  constructor(parent, options = {}) {
    super(parent.message);
    __publicField(this, "parent");
    __publicField(this, "original");
    __publicField(this, "sql");
    __publicField(this, "parameters");
    var _a;
    this.name = "SequelizeDatabaseError";
    this.parent = parent;
    this.original = parent;
    this.sql = parent.sql;
    this.parameters = (_a = parent.parameters) != null ? _a : {};
    if (options.stack) {
      this.stack = options.stack;
    }
  }
}
var database_error_default = DatabaseError;
//# sourceMappingURL=database-error.js.map
>>>>>>> e63ce884e0231dbc908a29214b51bd3cf50ef810
